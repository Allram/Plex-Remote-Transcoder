{
    "docs": [
        {
            "location": "/", 
            "text": "Plex Remote Transcoder\n\n\n\n\nA distributed transcoding backend for Plex.\n\n\nPlease help by reporting bugs or with pull-requests.\n\n\nFor those interested in testing this out quickly, I\nve put together a step by\nstep guide for getting this working on two Ubuntu machines.  You can find the\nguide \nhere\n.\n\n\nAddtionally, for proposed features and some current limitations, check out\n\nthis page\n.\n\n\n\n\nWarning\n\n\nUpgrading \nPlex Media Server\n often breaks things and it takes us some time to figure out what needs to be fixed.  It is suggested that you avoid upgrading your Plex server before checking here first.\n\n\n\n\nReleases\n\n\nThe table below shows what version of \nPlex Remote Transcoder\n to use based off of which version of \nPlex Media Server\n you are currently running.\n\n\n\n\n\n\n\n\nPlex Media Server Version\n\n\nPlex Remote Transcoder Version\n\n\n\n\n\n\n\n\n\n\n1.1.0.2611\n\n\nmaster\n (\nzip\n)\n\n\n\n\n\n\nBelow \n1.1.0\n\n\n0.3.5\n  (\nzip\n)\n\n\n\n\n\n\nBelow \n1.0\n\n\n0.2.2\n  (\nzip\n)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\nIf you are using a version of \nPlex Media Server\n not mentioned in the above table, you may encounter issues.  If you do have issues, \nplease report them\n!\n\n\n\n\nContributing\n\n\nBug fixes/reports and feature requests are welcome!  Either submit a pull request or create a new issue.  There is also a \ndiscussion board\n.\n\n\nHow Does it Work?\n\n\nThere have been quite a few projects attempting to load balance a Plex server,\nmost of which involve proxying HTTP requests between multiple\n\nPlex Media Server\n (\nPMS\n) installations.  This project takes a different, and\narguably easier approach that simply involves running the \nPlex New Transcoder\n\non a remote host.  In this setup there is only ever \none\n \nPMS\n installation\n(the \nmaster\n node), but there can be any number of transcode hosts (\nslave\n\nnodes).  Since transcoding is typically the most processor intensive aspect of\n\nPMS\n, it makes sense to be able to distribute this workload among all available\ncomputing resources.\n\n\nThe way this works is by replacing the default \nPlex New Transcoder\n binary on\nthe master \nPMS\n with a wrapper.  This wrapper allows us to intercept the\ntranscode request on the \nmaster\n node and send it to a transcode \nslave\n node.\nThe transcode \nslave\n invokes the true \nPlex New Transcoder\n binary, does the\n(trans|en)coding and saves the video segments to a network mounted shared\nfilesystem on the \nmaster\n.  The \nmaster\n then sends these segments to the\nclient and the video is played back just like normal.\n\n\nHow is the Useful?\n\n\nThat depends.  It may not be if you have a powerful \nPMS\n and/or very few\nsimultaneous users/devices.  If however you often see your main server being\nground to halt because of the transcoder \nand\n you have access to additional\ncomputational capacity, this might be useful to you.\n\n\nThis approach also makes it possible, in theory, to take advantage of scalable\ncomputing via services like Amazon\ns ECS and Google\ns Compute Engine.  By\ndefault you could have a  dedicated, cheap instance (like ECS\ns \nt2.micro\n)\nrunning \nPMS\n, then when a user requests a stream, a larger ECS instance could\nbe spawned to do the encoding.  When the user is done watching, the extra ECS\ninstance can be turned off, thereby saving you money.\n\n\nHelp\n\n\nRight now, things are pretty rough.  Trying to figure out why something isn\nt\nworking is difficult, but we\nre working on making this easier.  Also,\ninstallation isn\nt easy and there are lots of places to make mistakes, we\nre\nworking on that too.\n\n\nConfiguration\n\n\nThe configuration file is located in a file named \n~/.prt.conf\n.  It should be a\nvalid \nJSON\n file and is created for you the first time you run \nprt install\n.\nBelow is a list of some configuration options that can currently only be set\nby manually editing this file.\n\n\nservers_script\n\n\nThis option can be used to specify the path to an executable that will return a\nlist of currently available transcode \nslave\n node.  It is called before every\ntranscode request and should return a list of transcode nodes in the following\nformat:\n\n\nhostname-1 22 plex\nhostname-2 22 plex\n\n\n\n\n\nwhere each line is a new host, consisting of three entries: the hostname or IP\naddress, SSH port and SSH username.\n\n\npath_script\n\n\nThis option can be used to specify the path to an executable that accepts a\nsingle argument at the command line and returns a single line to \nstdout\n.  The\nsingle input parameter is the full path to the requested item to transcode.  If\nthe path is to be modified or changed, then the new path should be written back\nto \nstdout\n.  A simple example in Python that simply returns the same path is\ngiven below.\n\n\n#!/usr/bin/env python\n\n\nimport\n \nsys\n\n\n\nif\n \nlen\n(\nsys\n.\nargv\n)\n \n \n1\n:\n\n    \npath\n \n=\n \nsys\n.\nargv\n[\n1\n]\n\n    \nsys\n.\nstdout\n.\nwrite\n(\npath\n)\n\n\n\n\n\n\nlogging\n\n\nTODO: Document this.\n\n\nContributors\n\n\n\n\nWeston Nielson (Owner) - wnielson@github\n\n\nAndy Livingstone - liviynz@github\n\n\n\n\nDonations\n\n\nSome people have ask about how to dontate, so if you want to buy me a beer here are some links.  Cheers!", 
            "title": "Home"
        }, 
        {
            "location": "/#plex-remote-transcoder", 
            "text": "A distributed transcoding backend for Plex.  Please help by reporting bugs or with pull-requests.  For those interested in testing this out quickly, I ve put together a step by\nstep guide for getting this working on two Ubuntu machines.  You can find the\nguide  here .  Addtionally, for proposed features and some current limitations, check out this page .   Warning  Upgrading  Plex Media Server  often breaks things and it takes us some time to figure out what needs to be fixed.  It is suggested that you avoid upgrading your Plex server before checking here first.", 
            "title": "Plex Remote Transcoder"
        }, 
        {
            "location": "/#releases", 
            "text": "The table below shows what version of  Plex Remote Transcoder  to use based off of which version of  Plex Media Server  you are currently running.     Plex Media Server Version  Plex Remote Transcoder Version      1.1.0.2611  master  ( zip )    Below  1.1.0  0.3.5   ( zip )    Below  1.0  0.2.2   ( zip )      Note  If you are using a version of  Plex Media Server  not mentioned in the above table, you may encounter issues.  If you do have issues,  please report them !", 
            "title": "Releases"
        }, 
        {
            "location": "/#contributing", 
            "text": "Bug fixes/reports and feature requests are welcome!  Either submit a pull request or create a new issue.  There is also a  discussion board .", 
            "title": "Contributing"
        }, 
        {
            "location": "/#how-does-it-work", 
            "text": "There have been quite a few projects attempting to load balance a Plex server,\nmost of which involve proxying HTTP requests between multiple Plex Media Server  ( PMS ) installations.  This project takes a different, and\narguably easier approach that simply involves running the  Plex New Transcoder \non a remote host.  In this setup there is only ever  one   PMS  installation\n(the  master  node), but there can be any number of transcode hosts ( slave \nnodes).  Since transcoding is typically the most processor intensive aspect of PMS , it makes sense to be able to distribute this workload among all available\ncomputing resources.  The way this works is by replacing the default  Plex New Transcoder  binary on\nthe master  PMS  with a wrapper.  This wrapper allows us to intercept the\ntranscode request on the  master  node and send it to a transcode  slave  node.\nThe transcode  slave  invokes the true  Plex New Transcoder  binary, does the\n(trans|en)coding and saves the video segments to a network mounted shared\nfilesystem on the  master .  The  master  then sends these segments to the\nclient and the video is played back just like normal.", 
            "title": "How Does it Work?"
        }, 
        {
            "location": "/#how-is-the-useful", 
            "text": "That depends.  It may not be if you have a powerful  PMS  and/or very few\nsimultaneous users/devices.  If however you often see your main server being\nground to halt because of the transcoder  and  you have access to additional\ncomputational capacity, this might be useful to you.  This approach also makes it possible, in theory, to take advantage of scalable\ncomputing via services like Amazon s ECS and Google s Compute Engine.  By\ndefault you could have a  dedicated, cheap instance (like ECS s  t2.micro )\nrunning  PMS , then when a user requests a stream, a larger ECS instance could\nbe spawned to do the encoding.  When the user is done watching, the extra ECS\ninstance can be turned off, thereby saving you money.", 
            "title": "How is the Useful?"
        }, 
        {
            "location": "/#help", 
            "text": "Right now, things are pretty rough.  Trying to figure out why something isn t\nworking is difficult, but we re working on making this easier.  Also,\ninstallation isn t easy and there are lots of places to make mistakes, we re\nworking on that too.", 
            "title": "Help"
        }, 
        {
            "location": "/#configuration", 
            "text": "The configuration file is located in a file named  ~/.prt.conf .  It should be a\nvalid  JSON  file and is created for you the first time you run  prt install .\nBelow is a list of some configuration options that can currently only be set\nby manually editing this file.  servers_script  This option can be used to specify the path to an executable that will return a\nlist of currently available transcode  slave  node.  It is called before every\ntranscode request and should return a list of transcode nodes in the following\nformat:  hostname-1 22 plex\nhostname-2 22 plex  where each line is a new host, consisting of three entries: the hostname or IP\naddress, SSH port and SSH username.  path_script  This option can be used to specify the path to an executable that accepts a\nsingle argument at the command line and returns a single line to  stdout .  The\nsingle input parameter is the full path to the requested item to transcode.  If\nthe path is to be modified or changed, then the new path should be written back\nto  stdout .  A simple example in Python that simply returns the same path is\ngiven below.  #!/usr/bin/env python  import   sys  if   len ( sys . argv )     1 : \n     path   =   sys . argv [ 1 ] \n     sys . stdout . write ( path )   logging  TODO: Document this.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#contributors", 
            "text": "Weston Nielson (Owner) - wnielson@github  Andy Livingstone - liviynz@github", 
            "title": "Contributors"
        }, 
        {
            "location": "/#donations", 
            "text": "Some people have ask about how to dontate, so if you want to buy me a beer here are some links.  Cheers!", 
            "title": "Donations"
        }
    ]
}